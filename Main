import random


#dictionnaire suréactif
reaction_sureactif={}
reaction_sureactif[(3,0)]=3
reaction_sureactif[(3,-1)]=1
reaction_sureactif[(3,-2)]=0
reaction_sureactif[(3,-3)]=0
reaction_sureactif[(2,1)]=2
reaction_sureactif[(2,0)]=2
reaction_sureactif[(2,-1)]=0
reaction_sureactif[(2,-2)]=0
reaction_sureactif[(1,2)]=2
reaction_sureactif[(1,1)]=1
reaction_sureactif[(1,0)]=1
reaction_sureactif[(1,-1)]=0
reaction_sureactif[(0,3)]=2
reaction_sureactif[(0,2)]=1
reaction_sureactif[(0,1)]=0
reaction_sureactif[(0,0)]=0


#dictionnaire copieur
reaction_copieur={}
reaction_copieur[(3,-2)]=1
reaction_copieur[(3,-1)]=2
reaction_copieur[(3,0)]=3
reaction_copieur[(3,-3)]=0
reaction_copieur[(2,-1)]=1
reaction_copieur[(2,1)]=3
reaction_copieur[(2,0)]=2
reaction_copieur[(2,-2)]=0
reaction_copieur[(1,2)]=3
reaction_copieur[(1,1)]=2
reaction_copieur[(1,0)]=1
reaction_copieur[(1,-1)]=0
reaction_copieur[(0,3)]=3
reaction_copieur[(0,2)]=2
reaction_copieur[(0,1)]=1
reaction_copieur[(0,0)]=0


#dictionnaire passif
reaction_passif={}
reaction_passif[(3,-3)]=1
reaction_passif[(3,-2)]=2
reaction_passif[(3,-1)]=3
reaction_passif[(3,0)]=3
reaction_passif[(2,-2)]=1
reaction_passif[(2,-1)]=2
reaction_passif[(2,0)]=2
reaction_passif[(2,1)]=2
reaction_passif[(1,-1)]=1
reaction_passif[(1,0)]=1
reaction_passif[(1,1)]=1
reaction_passif[(1,2)]=2
reaction_passif[(0,0)]=0
reaction_passif[(0,1)]=1
reaction_passif[(0,2)]=1
reaction_passif[(0,3)]=2


class Voiture:
    def __init__(self, position = None, conducteur = None, lastmove = 0 , currentmove = 3 ,  special = None ):
        self.position = position
        self.conducteur = conducteur
        self.lastmove = lastmove
        self.currentmove = currentmove
        self.special = special



def creer_monde(taille, pourcentage_voitures, pourcentage_de_copieur,pourcentage_de_passif):
    monde = []
    nombres_voitures = int(taille * pourcentage_voitures) 
    espacement = taille // nombres_voitures
    cptnbcopieur=0
    cptnbpassif=0
    
    for i in range(nombres_voitures):
        
        if cptnbcopieur/nombres_voitures < pourcentage_de_copieur:
            monde.append(Voiture(i*espacement,"C"))
            cptnbcopieur +=1
            
        elif cptnbpassif/nombres_voitures <= pourcentage_de_passif:
            monde.append(Voiture(i*espacement,"P"))
            cptnbpassif += 1
            
        else :
            monde.append(Voiture(i*espacement,"S"))
        
    
    return monde
monde_cree = creer_monde(20, 0.5, 0.5,0.5)
        


def deplacement(monde,vitesse,taille):
    temp_last = 0 
    
    for elem in reversed(monde):
        
        if elem.special == "special":
            elem.position = (elem.position + vitesse) % taille
            elem.lastmove = vitesse
            temp_last = elem.lastmove
        
        else:
            elem.lastmove = elem.currentmove
            elem.currentmove = elem.currentmove - temp_last
            if elem.conducteur == "C":
                elem.position = (elem.position + reaction_copieur[(elem.lastmove, elem.currentmove)]) % taille
            elif elem.conducteur == "S":
                elem.position = (elem.position + reaction_sureactif[(elem.lastmove, elem.currentmove)]) % taille
            else:
                elem.position = (elem.position + reaction_passif[(elem.lastmove, elem.currentmove)]) % taille
            
            temp_last = elem.lastmove
    
    return monde


def afficher(monde,taille) :
    
    temp_monde = [None]*taille
    for elem in monde :
        temp_monde[elem.position] = elem          
    
    print("État du monde:")
    for i, voiture in enumerate(temp_monde):
        if voiture is not None:
            print(f"Position {i}: {voiture.position}, {voiture.conducteur}, {voiture.lastmove}, {voiture.currentmove}, {voiture.special}")
        else:
            print(f"Position {i}: Vide")





